.. Kenneth Lee 版权所有 2020

:Authors: Kenneth Lee
:Version: 1.0

恍惚
*****

介绍
====

“恍惚”这个概念我过去写过一个依附于其他上下文的定义：

        :doc:`../软件构架设计/再谈什么是高层设计`

经过一段时间的应用，我现在可以独立表述这个概念了，我把这个定义表述在这个文档中
。

恍惚
=====

恍惚是信息在没有构成“名”之前的状态。比如我们一眼看过去，看到一幅画，这里面有很
多信息，比如画的主色调，绘画用的材料，画的内容，画用的风格……等等等等。我们看一
眼过去，我们拿到了大部分的信息，我们觉得我们“知道”这些信息。但这个信息不能支撑
我们的逻辑链，不能用来决策。

如果我们站在“决策”这个角度来看这个问题，我们可能需要把所有的细节抽象成名，才能
正经去使用它。比如，我们把恍惚的信息放到某个特定的决策链中，恍惚的信息就变成一
个“名”了：

* 这明显是梵高的画，很值钱，赶紧拿走……

* 这可能是徐悲鸿画的马，别管那么多，赶紧赞就对了……

* 这个红色应该是血，凶手的破绽就在这里了……

* 这种纸质保留不了多久，要尽快裱起来保护……

我们把“恍惚”放到一个决策中，它才变成信息，那个东西才在支撑我们决策。“恍惚”本身
无名，所以看之不见，听之不闻。你说你看见了？你看见什么了？你看见一只“狗”，那你
就看见了一只狗的名，你并没有看见“疯狗症病毒”正在向你走过来，或者“一个保护你的
对象正在想你靠近”，这些所有你应该看见的信息，都应该在你的恍惚中，但只要你不把
它放进逻辑链，这个信息你就“看不见”，“听不到”，“摸不着”。

理解恍惚这个概念有利于我们正确地使用“名”。最近我去一线的支持团队调研，我调研的
方式是去找团队的工程师去了解他们现在正在解决的问题，他们会给我总结他们的情况，
比如：

* 现在不少客户找我们要支持的时候不肯把错误日志给我们，只能给我们描述，我们需要
  提供更多小白式的手册，才能完成相关的支持

* 私有云客户对code size很敏感，我们还要优化一下我们的代码大小

* RoCE+Seph是现在组网的主流，我们经常优化这样的网络

* ......

我会事无巨细地记录这些信息，但我不会“相信”这些信息，我常常会直接下去给他们具体
解决几个具体的问题。我原来没有想过这为什么，只是觉得这样才可靠。从恍惚这个概念
来说，如果我调研的时候只在“名”的基础上和人沟通，支持这个名的我的恍惚，和他的恍
惚，可能是完全不同的。我要尽量多看一两个包含更多细节的恍惚，这虽然不能代表全部
，但会比原来基于名来对齐的理解要可靠得多。甚至我不能在旁边看他们解决问题，我必
须自己去解决那个问题，我才会直接“看到”那个概念，否则我只会听之不闻，视而不见。

说到底，名给我们一种错觉，我们觉得别人给我们传递了全部的信息，实际上别人只是给
我们传递了一个抽象的名，这个抽象的名，他手中可能是一个真实的恍惚，但在你眼中想
象的那个恍惚，和他的恍惚可不一定一个样。

无知农妇眼中的皇帝可能用金锄头锄地，无知皇帝眼中的农民可能何不食肉糜。我们有很
多东西看不到。所以我们的决策一方面需要去接触恍惚，另一方面，我们得知道我们永远
都无法掌握具体的信息，我们必须在“知不知”上决策，我们仅去接触那个被突出来的问题
，确切知道什么是我们自己想象出来的，什么是被恍惚真实推出来的。比如私有云对code
size是不是真的敏感不一定是真的，但某个订单丢了这是实实在在的。不窥庸，见天下的
前提，是你总能看着你存在的基础。

.. vim: tw=78 fo+=mM
